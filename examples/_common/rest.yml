Parameters:
  Api:
    Type: String

  FunctionName:
    Type: String
    Description: Name of Lambda function.

  LogRetention:
    Type: Number
    Description: Number of days to retain logs.

  Method:
    Type: String

  Path:
    Type: String

Resources:
  Permission:
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref FunctionName
      Principal: 'apigateway.amazonaws.com'
      # The trailing asterisk allows for query strings
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${Api}/*/${Method}${Path}*'
    Type: 'AWS::Lambda::Permission'

  LogGroup:
    Properties:
      LogGroupName:
        Fn::Sub: '/aws/lambda/${FunctionName}'
      RetentionInDays: !Ref 'LogRetention'
    Type: 'AWS::Logs::LogGroup'

  InitDurationLogMetricFilter:
    Properties:
      FilterPattern: '[type=REPORT, ...]'
      LogGroupName: !Ref LogGroup
      MetricTransformations:
        - MetricName: !Sub 'InitDuration-${FunctionName}'
          MetricNamespace: 'Custom/Lambda'
          MetricValue: '$22'
          Unit: 'Milliseconds'
    Type: 'AWS::Logs::MetricFilter'

  MemorySizeLogMetricFilter:
    Properties:
      FilterPattern: '[type=REPORT, ...]'
      LogGroupName: !Ref 'LogGroup'
      MetricTransformations:
        - MetricName: !Sub 'MemorySize-${FunctionName}'
          MetricNamespace: 'Custom/Lambda'
          MetricValue: '$13'
          Unit: 'Megabytes'
    Type: 'AWS::Logs::MetricFilter'

  MemoryUsedLogMetricFilter:
    Properties:
      FilterPattern: '[type=REPORT, ...]'
      LogGroupName: !Ref 'LogGroup'
      MetricTransformations:
        - MetricName: !Sub 'MemoryUsed-${FunctionName}'
          MetricNamespace: 'Custom/Lambda'
          MetricValue: '$18'
          Unit: 'Megabytes'
    Type: 'AWS::Logs::MetricFilter'
