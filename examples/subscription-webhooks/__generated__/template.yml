AWSTemplateFormatVersion: '2010-09-09'
Conditions:
  IsProd:
    Fn::Equals:
      - Ref: 'StageName'
      - 'production'
Globals:
  Function:
    Environment:
      Variables: {}
    Handler: 'index.handler'
    MemorySize: 256
    Runtime: 'nodejs18.x'
    Timeout: 30
    Tracing: 'Active'
Outputs:
  TableAccount:
    Description: 'The name of the DynamoDB table for TableAccount'
    Export:
      Name:
        Fn::Sub: '${AWS::StackName}-TableAccount'
    Value:
      Ref: 'TableAccount'
  TableMetric:
    Description: 'The name of the DynamoDB table for TableMetric'
    Export:
      Name:
        Fn::Sub: '${AWS::StackName}-TableMetric'
    Value:
      Ref: 'TableMetric'
  TablePlanMetric:
    Description: 'The name of the DynamoDB table for TablePlanMetric'
    Export:
      Name:
        Fn::Sub: '${AWS::StackName}-TablePlanMetric'
    Value:
      Ref: 'TablePlanMetric'
  TableSubscriptionEvent:
    Description: 'The name of the DynamoDB table for TableSubscriptionEvent'
    Export:
      Name:
        Fn::Sub: '${AWS::StackName}-TableSubscriptionEvent'
    Value:
      Ref: 'TableSubscriptionEvent'
Parameters:
  StageName:
    AllowedValues:
      - 'development'
      - 'production'
      - 'test'
    Default: 'development'
    Description: 'The name of the stage'
    Type: 'String'
Resources:
  FNDNSCDCFnEnricherSEUpsertA5b59364d:
    Properties:
      Location: './cdc.yml'
      Parameters:
        CodeUri: 'enricher--subscription-event--upsert--account'
        DetailType: 'INSERT,MODIFY'
        MemorySize: 256
        SourceModelName: 'SubscriptionEvent'
        StageName:
          Ref: 'StageName'
        TableArn:
          Fn::GetAtt:
            - 'TableSubscriptionEvent'
            - 'Arn'
        TableName: 'TableSubscriptionEvent'
        TableNames:
          Fn::ToJsonString:
            TABLE_ACCOUNT:
              Ref: 'TableAccount'
        Timeout: 90
    Type: 'AWS::Serverless::Application'
  FNDNSCDCFnReduceAUpsertPMcefd632d:
    Properties:
      Location: './cdc.yml'
      Parameters:
        CodeUri: 'reduce--account--upsert--plan-metric'
        DetailType: 'INSERT,MODIFY'
        MemorySize: 256
        SourceModelName: 'Account'
        StageName:
          Ref: 'StageName'
        TableArn:
          Fn::GetAtt:
            - 'TableAccount'
            - 'Arn'
        TableName: 'TableAccount'
        TableNames:
          Fn::ToJsonString:
            TABLE_ACCOUNT:
              Ref: 'TableAccount'
            TABLE_PLAN_METRIC:
              Ref: 'TablePlanMetric'
        Timeout: 90
    Type: 'AWS::Serverless::Application'
  FNDNSCDCFnReducePMUpsertM675ec33d:
    Properties:
      Location: './cdc.yml'
      Parameters:
        CodeUri: 'reduce--plan-metric--upsert--metric'
        DetailType: 'INSERT,MODIFY'
        MemorySize: 256
        SourceModelName: 'PlanMetric'
        StageName:
          Ref: 'StageName'
        TableArn:
          Fn::GetAtt:
            - 'TablePlanMetric'
            - 'Arn'
        TableName: 'TablePlanMetric'
        TableNames:
          Fn::ToJsonString:
            TABLE_METRIC:
              Ref: 'TableMetric'
            TABLE_PLAN_METRIC:
              Ref: 'TablePlanMetric'
        Timeout: 90
    Type: 'AWS::Serverless::Application'
  FNDNSTDTableAccountCDCDispatcher:
    Properties:
      Location: './dispatcher.yml'
      Parameters:
        BatchSize: 10
        CodeUri: 'dispatcher-table-account'
        EventBus: 'default'
        MaximumRetryAttempts: 3
        MemorySize: 384
        StreamArn:
          Fn::GetAtt:
            - 'TableAccount'
            - 'StreamArn'
        Timeout: 60
    Type: 'AWS::Serverless::Application'
  FNDNSTDTablePlanMetricCDCDispatcher:
    Properties:
      Location: './dispatcher.yml'
      Parameters:
        BatchSize: 10
        CodeUri: 'dispatcher-table-plan-metric'
        EventBus: 'default'
        MaximumRetryAttempts: 3
        MemorySize: 384
        StreamArn:
          Fn::GetAtt:
            - 'TablePlanMetric'
            - 'StreamArn'
        Timeout: 60
    Type: 'AWS::Serverless::Application'
  FNDNSTDTableSubscriptionEventCDCDispatcher:
    Properties:
      Location: './dispatcher.yml'
      Parameters:
        BatchSize: 10
        CodeUri: 'dispatcher-table-subscription-event'
        EventBus: 'default'
        MaximumRetryAttempts: 3
        MemorySize: 384
        StreamArn:
          Fn::GetAtt:
            - 'TableSubscriptionEvent'
            - 'StreamArn'
        Timeout: 60
    Type: 'AWS::Serverless::Application'
  FnEnricherSEUpsertA5b59364dTableAccessPolicy:
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - 'dynamodb:GetItem'
              - 'dynamodb:DeleteItem'
              - 'dynamodb:PutItem'
              - 'dynamodb:Scan'
              - 'dynamodb:Query'
              - 'dynamodb:UpdateItem'
              - 'dynamodb:BatchWriteItem'
              - 'dynamodb:BatchGetItem'
              - 'dynamodb:DescribeTable'
              - 'dynamodb:ConditionCheckItem'
            Effect: 'Allow'
            Resource:
              - Fn::GetAtt:
                  - 'TableAccount'
                  - 'Arn'
              - Fn::Sub:
                  - '${tableArn}/index/*'
                  - tableArn:
                      Fn::GetAtt:
                        - 'TableAccount'
                        - 'Arn'
        Version: '2012-10-17'
      PolicyName: 'FnEnricherSEUpsertA5b59364dTableAccessPolicy'
      Roles:
        - Fn::GetAtt:
            - 'FNDNSCDCFnEnricherSEUpsertA5b59364d'
            - 'Outputs.Role'
    Type: 'AWS::IAM::Policy'
  FnReduceAUpsertPMcefd632dTableAccessPolicy:
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - 'dynamodb:GetItem'
              - 'dynamodb:Scan'
              - 'dynamodb:Query'
              - 'dynamodb:BatchGetItem'
              - 'dynamodb:DescribeTable'
            Effect: 'Allow'
            Resource:
              - Fn::GetAtt:
                  - 'TableAccount'
                  - 'Arn'
              - Fn::Sub:
                  - '${tableArn}/index/*'
                  - tableArn:
                      Fn::GetAtt:
                        - 'TableAccount'
                        - 'Arn'
          - Action:
              - 'dynamodb:GetItem'
              - 'dynamodb:DeleteItem'
              - 'dynamodb:PutItem'
              - 'dynamodb:Scan'
              - 'dynamodb:Query'
              - 'dynamodb:UpdateItem'
              - 'dynamodb:BatchWriteItem'
              - 'dynamodb:BatchGetItem'
              - 'dynamodb:DescribeTable'
              - 'dynamodb:ConditionCheckItem'
            Effect: 'Allow'
            Resource:
              - Fn::GetAtt:
                  - 'TablePlanMetric'
                  - 'Arn'
              - Fn::Sub:
                  - '${tableArn}/index/*'
                  - tableArn:
                      Fn::GetAtt:
                        - 'TablePlanMetric'
                        - 'Arn'
        Version: '2012-10-17'
      PolicyName: 'FnReduceAUpsertPMcefd632dTableAccessPolicy'
      Roles:
        - Fn::GetAtt:
            - 'FNDNSCDCFnReduceAUpsertPMcefd632d'
            - 'Outputs.Role'
    Type: 'AWS::IAM::Policy'
  FnReducePMUpsertM675ec33dTableAccessPolicy:
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - 'dynamodb:GetItem'
              - 'dynamodb:Scan'
              - 'dynamodb:Query'
              - 'dynamodb:BatchGetItem'
              - 'dynamodb:DescribeTable'
            Effect: 'Allow'
            Resource:
              - Fn::GetAtt:
                  - 'TablePlanMetric'
                  - 'Arn'
              - Fn::Sub:
                  - '${tableArn}/index/*'
                  - tableArn:
                      Fn::GetAtt:
                        - 'TablePlanMetric'
                        - 'Arn'
          - Action:
              - 'dynamodb:GetItem'
              - 'dynamodb:DeleteItem'
              - 'dynamodb:PutItem'
              - 'dynamodb:Scan'
              - 'dynamodb:Query'
              - 'dynamodb:UpdateItem'
              - 'dynamodb:BatchWriteItem'
              - 'dynamodb:BatchGetItem'
              - 'dynamodb:DescribeTable'
              - 'dynamodb:ConditionCheckItem'
            Effect: 'Allow'
            Resource:
              - Fn::GetAtt:
                  - 'TableMetric'
                  - 'Arn'
              - Fn::Sub:
                  - '${tableArn}/index/*'
                  - tableArn:
                      Fn::GetAtt:
                        - 'TableMetric'
                        - 'Arn'
        Version: '2012-10-17'
      PolicyName: 'FnReducePMUpsertM675ec33dTableAccessPolicy'
      Roles:
        - Fn::GetAtt:
            - 'FNDNSCDCFnReducePMUpsertM675ec33d'
            - 'Outputs.Role'
    Type: 'AWS::IAM::Policy'
  TableAccount:
    Properties:
      AttributeDefinitions:
        - AttributeName: 'pk'
          AttributeType: 'S'
        - AttributeName: 'sk'
          AttributeType: 'S'
        - AttributeName: 'gsi1pk'
          AttributeType: 'S'
        - AttributeName: 'gsi1sk'
          AttributeType: 'S'
      BillingMode: 'PAY_PER_REQUEST'
      GlobalSecondaryIndexes:
        - IndexName: 'gsi1'
          KeySchema:
            - AttributeName: 'gsi1pk'
              KeyType: 'HASH'
            - AttributeName: 'gsi1sk'
              KeyType: 'RANGE'
          Projection:
            ProjectionType: 'ALL'
      KeySchema:
        - AttributeName: 'pk'
          KeyType: 'HASH'
        - AttributeName: 'sk'
          KeyType: 'RANGE'
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled:
          Fn::If:
            - 'IsProd'
            - true
            - false
      SSESpecification:
        SSEEnabled:
          Fn::If:
            - 'IsProd'
            - true
            - false
      StreamSpecification:
        StreamViewType: 'NEW_AND_OLD_IMAGES'
      Tags:
        - Key: 'StageName'
          Value:
            Ref: 'StageName'
        - Key: 'TableName'
          Value: 'TableAccount'
    Type: 'AWS::DynamoDB::Table'
  TableMetric:
    Properties:
      AttributeDefinitions:
        - AttributeName: 'pk'
          AttributeType: 'S'
        - AttributeName: 'sk'
          AttributeType: 'S'
      BillingMode: 'PAY_PER_REQUEST'
      KeySchema:
        - AttributeName: 'pk'
          KeyType: 'HASH'
        - AttributeName: 'sk'
          KeyType: 'RANGE'
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled:
          Fn::If:
            - 'IsProd'
            - true
            - false
      SSESpecification:
        SSEEnabled:
          Fn::If:
            - 'IsProd'
            - true
            - false
      Tags:
        - Key: 'StageName'
          Value:
            Ref: 'StageName'
        - Key: 'TableName'
          Value: 'TableMetric'
    Type: 'AWS::DynamoDB::Table'
  TablePlanMetric:
    Properties:
      AttributeDefinitions:
        - AttributeName: 'pk'
          AttributeType: 'S'
        - AttributeName: 'sk'
          AttributeType: 'S'
      BillingMode: 'PAY_PER_REQUEST'
      KeySchema:
        - AttributeName: 'pk'
          KeyType: 'HASH'
        - AttributeName: 'sk'
          KeyType: 'RANGE'
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled:
          Fn::If:
            - 'IsProd'
            - true
            - false
      SSESpecification:
        SSEEnabled:
          Fn::If:
            - 'IsProd'
            - true
            - false
      StreamSpecification:
        StreamViewType: 'NEW_AND_OLD_IMAGES'
      Tags:
        - Key: 'StageName'
          Value:
            Ref: 'StageName'
        - Key: 'TableName'
          Value: 'TablePlanMetric'
    Type: 'AWS::DynamoDB::Table'
  TableSubscriptionEvent:
    Properties:
      AttributeDefinitions:
        - AttributeName: 'pk'
          AttributeType: 'S'
        - AttributeName: 'sk'
          AttributeType: 'S'
      BillingMode: 'PAY_PER_REQUEST'
      KeySchema:
        - AttributeName: 'pk'
          KeyType: 'HASH'
        - AttributeName: 'sk'
          KeyType: 'RANGE'
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled:
          Fn::If:
            - 'IsProd'
            - true
            - false
      SSESpecification:
        SSEEnabled:
          Fn::If:
            - 'IsProd'
            - true
            - false
      StreamSpecification:
        StreamViewType: 'NEW_AND_OLD_IMAGES'
      Tags:
        - Key: 'StageName'
          Value:
            Ref: 'StageName'
        - Key: 'TableName'
          Value: 'TableSubscriptionEvent'
    Type: 'AWS::DynamoDB::Table'
Transform:
  - 'AWS::Serverless-2016-10-31'
  - 'AWS::LanguageExtensions'
