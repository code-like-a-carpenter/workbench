env:
  # Most of the code here will not be for the browser; use overrides to indicate
  # browser code.
  browser: false
  node: true

extends:
  - 'plugin:workspaces/recommended'
  - 'plugin:@ianwremmel/ianwremmel/modern'
  - 'plugin:@ianwremmel/ianwremmel/typescript'
  - 'prettier'

ignorePatterns:
  - dist
  - '!.graphqlrc.js'

overrides:
  - files:
      - '**/*.graphql'
      - '**/*.graphqls'
    extends: 'plugin:@graphql-eslint/schema-recommended'
    rules:
      # Since we're building a bunch of different schema, not all of the shared
      # schema will be used in each combined schema ,so this rule can't be
      # usefully enforced.
      '@graphql-eslint/no-unreachable-types': off
      '@graphql-eslint/no-typename-prefix': off
      strict: off

  - files:
      - '**/*.ts'
      - '**/*.tsx'
    parserOptions:
      sourceType: module
    rules:
      # These rules do the wrong thing when they encounter type imports
      no-duplicate-imports: off
      import/no-duplicates: error

  - files:
      - '**/*.spec.*'
      - 'test/jest/spec/**/*'
      - '**/__mocks__/**/*'
    env:
      jest: true

  - files:
      - '**/__generated__/**'
      - '**/*.generated.*'
    rules:
      '@typescript-eslint/no-explicit-any': off
      '@typescript-eslint/no-unused-vars': off
      complexity: off
      eslint-comments/disable-enable-pair: off
      eslint-comments/no-unlimited-disable: off
      no-restricted-imports: off
      prefer-destructuring: off
      sort-keys: off

parserOptions:
  sourceType: 'script'

plugins:
  - workspaces

settings:
  react:
    version: 'detect'
  import/internal-regex: '^@code-like-a-carpenter/'

rules:
  '@typescript-eslint/consistent-type-imports': 'error'
  '@typescript-eslint/no-unused-vars':
    - 'error'
    - args: 'after-used'
      ignoreRestSiblings: true
  import/no-extraneous-dependencies:
    - error
    - devDependencies:
        - '!src/**/*'
        - '!packages/**/*'
  no-restricted-imports:
    - error
    - patterns:
        # Avoid importing directly from files in packages and instead allow only
        # importing from the main entry point.
        - 'src'
  workspaces/no-relative-imports: 'error'
  require-jsdoc: off
