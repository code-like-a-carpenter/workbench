// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`@enriches configures the handler to update one model when another changes 3`] = `
{
  "additionalImports": [],
  "dependenciesModuleId": "dependencies.ts",
  "models": [
    {
      "changeDataCaptureConfig": [],
      "consistent": false,
      "enablePointInTimeRecovery": true,
      "fields": [
        {
          "columnName": "_ct",
          "columnNamesForRead": [
            "_ct",
          ],
          "computeFunction": undefined,
          "ean": ":createdAt",
          "eav": "#createdAt",
          "fieldName": "createdAt",
          "isDateType": true,
          "isRequired": true,
          "isScalarType": true,
          "typeName": "Date",
        },
        {
          "columnName": "id",
          "columnNamesForRead": [
            "id",
            "id",
          ],
          "computeFunction": undefined,
          "ean": ":id",
          "eav": "#id",
          "fieldName": "id",
          "isDateType": false,
          "isRequired": true,
          "isScalarType": true,
          "typeName": "ID",
        },
        {
          "columnName": "_md",
          "columnNamesForRead": [
            "_md",
          ],
          "computeFunction": undefined,
          "ean": ":updatedAt",
          "eav": "#updatedAt",
          "fieldName": "updatedAt",
          "isDateType": true,
          "isRequired": true,
          "isScalarType": true,
          "typeName": "Date",
        },
        {
          "columnName": "_v",
          "columnNamesForRead": [
            "_v",
          ],
          "computeFunction": undefined,
          "ean": ":version",
          "eav": "#version",
          "fieldName": "version",
          "isDateType": false,
          "isRequired": true,
          "isScalarType": true,
          "typeName": "Int",
        },
        {
          "columnName": "cancelled",
          "columnNamesForRead": [
            "cancelled",
            "cancelled",
          ],
          "computeFunction": undefined,
          "ean": ":cancelled",
          "eav": "#cancelled",
          "fieldName": "cancelled",
          "isDateType": false,
          "isRequired": true,
          "isScalarType": true,
          "typeName": "Boolean",
        },
        {
          "columnName": "external_id",
          "columnNamesForRead": [
            "external_id",
            "externalId",
          ],
          "computeFunction": undefined,
          "ean": ":externalId",
          "eav": "#externalId",
          "fieldName": "externalId",
          "isDateType": false,
          "isRequired": true,
          "isScalarType": true,
          "typeName": "String",
        },
        {
          "columnName": "plan_name",
          "columnNamesForRead": [
            "plan_name",
            "planName",
          ],
          "computeFunction": undefined,
          "ean": ":planName",
          "eav": "#planName",
          "fieldName": "planName",
          "isDateType": false,
          "isRequired": false,
          "isScalarType": true,
          "typeName": "String",
        },
      ],
      "isLedger": false,
      "isPublic": false,
      "primaryKey": {
        "isComposite": true,
        "partitionKeyFields": [
          {
            "columnName": "external_id",
            "columnNamesForRead": [
              "external_id",
              "externalId",
            ],
            "computeFunction": undefined,
            "ean": ":externalId",
            "eav": "#externalId",
            "fieldName": "externalId",
            "isDateType": false,
            "isRequired": true,
            "isScalarType": true,
            "typeName": "String",
          },
        ],
        "partitionKeyIsSingleField": true,
        "partitionKeyName": "pk",
        "partitionKeyPrefix": "ACCOUNT",
        "sortKeyFields": [],
        "sortKeyIsSingleField": false,
        "sortKeyName": "sk",
        "sortKeyPrefix": "",
        "type": "primary",
      },
      "secondaryIndexes": [],
      "table": {
        "dependenciesModuleId": "../dependencies.ts",
        "enablePointInTimeRecovery": true,
        "enableStreaming": false,
        "hasCdc": false,
        "hasPublicModels": false,
        "hasTtl": false,
        "primaryKey": {
          "isComposite": true,
          "partitionKeyFields": [
            {
              "columnName": "external_id",
              "columnNamesForRead": [
                "external_id",
                "externalId",
              ],
              "computeFunction": undefined,
              "ean": ":externalId",
              "eav": "#externalId",
              "fieldName": "externalId",
              "isDateType": false,
              "isRequired": true,
              "isScalarType": true,
              "typeName": "String",
            },
          ],
          "partitionKeyIsSingleField": true,
          "partitionKeyName": "pk",
          "partitionKeyPrefix": "ACCOUNT",
          "sortKeyFields": [],
          "sortKeyIsSingleField": false,
          "sortKeyName": "sk",
          "sortKeyPrefix": "",
          "type": "primary",
        },
        "secondaryIndexes": [],
        "tableName": "TableAccount",
      },
      "ttlConfig": undefined,
      "typeName": "Account",
    },
    {
      "changeDataCaptureConfig": [
        {
          "actionsModuleId": "../actions.ts",
          "directory": "placeholder/enricher--subscription-event--upsert--account",
          "event": "UPSERT",
          "filename": "enricher--subscription-event--upsert--account",
          "functionName": "FnEnricherSEUpsertA5b59364d",
          "handlerImportName": "Placeholder",
          "handlerModuleId": "../../../src/enrich--subscription--upsert--account.ts",
          "memorySize": 256,
          "nestedStackLocation": "./cdc.yml",
          "readableTables": [],
          "runtimeModuleId": "@code-like-a-carpenter/foundation-runtime",
          "sourceModelName": "SubscriptionEvent",
          "targetModelName": "Account",
          "timeout": 30,
          "type": "ENRICHER",
          "writableTables": [
            "TableAccount",
          ],
        },
      ],
      "consistent": false,
      "enablePointInTimeRecovery": true,
      "fields": [
        {
          "columnName": "_ct",
          "columnNamesForRead": [
            "_ct",
          ],
          "computeFunction": undefined,
          "ean": ":createdAt",
          "eav": "#createdAt",
          "fieldName": "createdAt",
          "isDateType": true,
          "isRequired": true,
          "isScalarType": true,
          "typeName": "Date",
        },
        {
          "columnName": "id",
          "columnNamesForRead": [
            "id",
            "id",
          ],
          "computeFunction": undefined,
          "ean": ":id",
          "eav": "#id",
          "fieldName": "id",
          "isDateType": false,
          "isRequired": true,
          "isScalarType": true,
          "typeName": "ID",
        },
        {
          "columnName": "_md",
          "columnNamesForRead": [
            "_md",
          ],
          "computeFunction": undefined,
          "ean": ":updatedAt",
          "eav": "#updatedAt",
          "fieldName": "updatedAt",
          "isDateType": true,
          "isRequired": true,
          "isScalarType": true,
          "typeName": "Date",
        },
        {
          "columnName": "_v",
          "columnNamesForRead": [
            "_v",
          ],
          "computeFunction": undefined,
          "ean": ":version",
          "eav": "#version",
          "fieldName": "version",
          "isDateType": false,
          "isRequired": true,
          "isScalarType": true,
          "typeName": "Int",
        },
        {
          "columnName": "cancelled",
          "columnNamesForRead": [
            "cancelled",
            "cancelled",
          ],
          "computeFunction": undefined,
          "ean": ":cancelled",
          "eav": "#cancelled",
          "fieldName": "cancelled",
          "isDateType": false,
          "isRequired": true,
          "isScalarType": true,
          "typeName": "Boolean",
        },
        {
          "columnName": "effective_date",
          "columnNamesForRead": [
            "effective_date",
            "effectiveDate",
          ],
          "computeFunction": undefined,
          "ean": ":effectiveDate",
          "eav": "#effectiveDate",
          "fieldName": "effectiveDate",
          "isDateType": true,
          "isRequired": true,
          "isScalarType": true,
          "typeName": "Date",
        },
        {
          "columnName": "external_id",
          "columnNamesForRead": [
            "external_id",
            "externalId",
          ],
          "computeFunction": undefined,
          "ean": ":externalId",
          "eav": "#externalId",
          "fieldName": "externalId",
          "isDateType": false,
          "isRequired": true,
          "isScalarType": true,
          "typeName": "String",
        },
        {
          "columnName": "monthly_price_in_cents",
          "columnNamesForRead": [
            "monthly_price_in_cents",
            "monthlyPriceInCents",
          ],
          "computeFunction": undefined,
          "ean": ":monthlyPriceInCents",
          "eav": "#monthlyPriceInCents",
          "fieldName": "monthlyPriceInCents",
          "isDateType": false,
          "isRequired": true,
          "isScalarType": true,
          "typeName": "Int",
        },
        {
          "columnName": "on_free_trial",
          "columnNamesForRead": [
            "on_free_trial",
            "onFreeTrial",
          ],
          "computeFunction": undefined,
          "ean": ":onFreeTrial",
          "eav": "#onFreeTrial",
          "fieldName": "onFreeTrial",
          "isDateType": false,
          "isRequired": true,
          "isScalarType": true,
          "typeName": "Boolean",
        },
        {
          "columnName": "plan_name",
          "columnNamesForRead": [
            "plan_name",
            "planName",
          ],
          "computeFunction": undefined,
          "ean": ":planName",
          "eav": "#planName",
          "fieldName": "planName",
          "isDateType": false,
          "isRequired": true,
          "isScalarType": true,
          "typeName": "String",
        },
      ],
      "isLedger": true,
      "isPublic": false,
      "primaryKey": {
        "isComposite": true,
        "partitionKeyFields": [
          {
            "columnName": "external_id",
            "columnNamesForRead": [
              "external_id",
              "externalId",
            ],
            "computeFunction": undefined,
            "ean": ":externalId",
            "eav": "#externalId",
            "fieldName": "externalId",
            "isDateType": false,
            "isRequired": true,
            "isScalarType": true,
            "typeName": "String",
          },
        ],
        "partitionKeyIsSingleField": true,
        "partitionKeyName": "pk",
        "partitionKeyPrefix": "ACCOUNT",
        "sortKeyFields": [
          {
            "columnName": "effective_date",
            "columnNamesForRead": [
              "effective_date",
              "effectiveDate",
            ],
            "computeFunction": undefined,
            "ean": ":effectiveDate",
            "eav": "#effectiveDate",
            "fieldName": "effectiveDate",
            "isDateType": true,
            "isRequired": true,
            "isScalarType": true,
            "typeName": "Date",
          },
        ],
        "sortKeyIsSingleField": true,
        "sortKeyName": "sk",
        "sortKeyPrefix": "SUBSCRIPTION_EVENT",
        "type": "primary",
      },
      "secondaryIndexes": [],
      "table": {
        "dependenciesModuleId": "../dependencies.ts",
        "dispatcherConfig": {
          "batchSize": 10,
          "dependenciesModuleId": "../dependencies.ts",
          "directory": "placeholder/dispatcher-table-subscription-event",
          "filename": "dispatcher-table-subscription-event",
          "functionName": "TableSubscriptionEventCDCDispatcher",
          "maximumRetryAttempts": 3,
          "memorySize": 256,
          "nestedStackLocation": "./dispatcher.yml",
          "runtimeModuleId": "@code-like-a-carpenter/foundation-runtime",
          "timeout": 30,
        },
        "enablePointInTimeRecovery": true,
        "enableStreaming": true,
        "hasCdc": true,
        "hasPublicModels": false,
        "hasTtl": false,
        "primaryKey": {
          "isComposite": true,
          "partitionKeyFields": [
            {
              "columnName": "external_id",
              "columnNamesForRead": [
                "external_id",
                "externalId",
              ],
              "computeFunction": undefined,
              "ean": ":externalId",
              "eav": "#externalId",
              "fieldName": "externalId",
              "isDateType": false,
              "isRequired": true,
              "isScalarType": true,
              "typeName": "String",
            },
          ],
          "partitionKeyIsSingleField": true,
          "partitionKeyName": "pk",
          "partitionKeyPrefix": "ACCOUNT",
          "sortKeyFields": [
            {
              "columnName": "effective_date",
              "columnNamesForRead": [
                "effective_date",
                "effectiveDate",
              ],
              "computeFunction": undefined,
              "ean": ":effectiveDate",
              "eav": "#effectiveDate",
              "fieldName": "effectiveDate",
              "isDateType": true,
              "isRequired": true,
              "isScalarType": true,
              "typeName": "Date",
            },
          ],
          "sortKeyIsSingleField": true,
          "sortKeyName": "sk",
          "sortKeyPrefix": "SUBSCRIPTION_EVENT",
          "type": "primary",
        },
        "secondaryIndexes": [],
        "tableName": "TableSubscriptionEvent",
      },
      "ttlConfig": undefined,
      "typeName": "SubscriptionEvent",
    },
  ],
  "tables": [
    {
      "dependenciesModuleId": "../dependencies.ts",
      "enablePointInTimeRecovery": true,
      "enableStreaming": false,
      "hasCdc": false,
      "hasPublicModels": false,
      "hasTtl": false,
      "primaryKey": {
        "isComposite": true,
        "partitionKeyFields": [
          {
            "columnName": "external_id",
            "columnNamesForRead": [
              "external_id",
              "externalId",
            ],
            "computeFunction": undefined,
            "ean": ":externalId",
            "eav": "#externalId",
            "fieldName": "externalId",
            "isDateType": false,
            "isRequired": true,
            "isScalarType": true,
            "typeName": "String",
          },
        ],
        "partitionKeyIsSingleField": true,
        "partitionKeyName": "pk",
        "partitionKeyPrefix": "ACCOUNT",
        "sortKeyFields": [],
        "sortKeyIsSingleField": false,
        "sortKeyName": "sk",
        "sortKeyPrefix": "",
        "type": "primary",
      },
      "secondaryIndexes": [],
      "tableName": "TableAccount",
    },
    {
      "dependenciesModuleId": "../dependencies.ts",
      "dispatcherConfig": {
        "batchSize": 10,
        "dependenciesModuleId": "../dependencies.ts",
        "directory": "placeholder/dispatcher-table-subscription-event",
        "filename": "dispatcher-table-subscription-event",
        "functionName": "TableSubscriptionEventCDCDispatcher",
        "maximumRetryAttempts": 3,
        "memorySize": 256,
        "nestedStackLocation": "./dispatcher.yml",
        "runtimeModuleId": "@code-like-a-carpenter/foundation-runtime",
        "timeout": 30,
      },
      "enablePointInTimeRecovery": true,
      "enableStreaming": true,
      "hasCdc": true,
      "hasPublicModels": false,
      "hasTtl": false,
      "primaryKey": {
        "isComposite": true,
        "partitionKeyFields": [
          {
            "columnName": "external_id",
            "columnNamesForRead": [
              "external_id",
              "externalId",
            ],
            "computeFunction": undefined,
            "ean": ":externalId",
            "eav": "#externalId",
            "fieldName": "externalId",
            "isDateType": false,
            "isRequired": true,
            "isScalarType": true,
            "typeName": "String",
          },
        ],
        "partitionKeyIsSingleField": true,
        "partitionKeyName": "pk",
        "partitionKeyPrefix": "ACCOUNT",
        "sortKeyFields": [
          {
            "columnName": "effective_date",
            "columnNamesForRead": [
              "effective_date",
              "effectiveDate",
            ],
            "computeFunction": undefined,
            "ean": ":effectiveDate",
            "eav": "#effectiveDate",
            "fieldName": "effectiveDate",
            "isDateType": true,
            "isRequired": true,
            "isScalarType": true,
            "typeName": "Date",
          },
        ],
        "sortKeyIsSingleField": true,
        "sortKeyName": "sk",
        "sortKeyPrefix": "SUBSCRIPTION_EVENT",
        "type": "primary",
      },
      "secondaryIndexes": [],
      "tableName": "TableSubscriptionEvent",
    },
  ],
}
`;

exports[`@reacts configures an event handler for the model 3`] = `
{
  "additionalImports": [],
  "dependenciesModuleId": "dependencies.ts",
  "models": [
    {
      "changeDataCaptureConfig": [
        {
          "actionsModuleId": "../actions.ts",
          "directory": "placeholder/react--plan-metric--upsert",
          "event": "UPSERT",
          "filename": "react--plan-metric--upsert",
          "functionName": "FnReactPMUpsert2b2e8d7d",
          "handlerImportName": "Placeholder",
          "handlerModuleId": "../../../src/react--plan-metric--upsert.ts",
          "memorySize": 256,
          "nestedStackLocation": "./cdc.yml",
          "readableTables": [],
          "runtimeModuleId": "@code-like-a-carpenter/foundation-runtime",
          "sourceModelName": "PlanMetric",
          "timeout": 30,
          "type": "REACTOR",
          "writableTables": [],
        },
      ],
      "consistent": false,
      "enablePointInTimeRecovery": true,
      "fields": [
        {
          "columnName": "_ct",
          "columnNamesForRead": [
            "_ct",
          ],
          "computeFunction": undefined,
          "ean": ":createdAt",
          "eav": "#createdAt",
          "fieldName": "createdAt",
          "isDateType": true,
          "isRequired": true,
          "isScalarType": true,
          "typeName": "Date",
        },
        {
          "columnName": "id",
          "columnNamesForRead": [
            "id",
            "id",
          ],
          "computeFunction": undefined,
          "ean": ":id",
          "eav": "#id",
          "fieldName": "id",
          "isDateType": false,
          "isRequired": true,
          "isScalarType": true,
          "typeName": "ID",
        },
        {
          "columnName": "_md",
          "columnNamesForRead": [
            "_md",
          ],
          "computeFunction": undefined,
          "ean": ":updatedAt",
          "eav": "#updatedAt",
          "fieldName": "updatedAt",
          "isDateType": true,
          "isRequired": true,
          "isScalarType": true,
          "typeName": "Date",
        },
        {
          "columnName": "_v",
          "columnNamesForRead": [
            "_v",
          ],
          "computeFunction": undefined,
          "ean": ":version",
          "eav": "#version",
          "fieldName": "version",
          "isDateType": false,
          "isRequired": true,
          "isScalarType": true,
          "typeName": "Int",
        },
        {
          "columnName": "cancelled",
          "columnNamesForRead": [
            "cancelled",
            "cancelled",
          ],
          "computeFunction": undefined,
          "ean": ":cancelled",
          "eav": "#cancelled",
          "fieldName": "cancelled",
          "isDateType": false,
          "isRequired": true,
          "isScalarType": true,
          "typeName": "Boolean",
        },
        {
          "columnName": "count",
          "columnNamesForRead": [
            "count",
            "count",
          ],
          "computeFunction": undefined,
          "ean": ":count",
          "eav": "#count",
          "fieldName": "count",
          "isDateType": false,
          "isRequired": true,
          "isScalarType": true,
          "typeName": "Int",
        },
        {
          "columnName": "monthly_recurring_revenue_in_cents",
          "columnNamesForRead": [
            "monthly_recurring_revenue_in_cents",
            "monthlyRecurringRevenueInCents",
          ],
          "computeFunction": undefined,
          "ean": ":monthlyRecurringRevenueInCents",
          "eav": "#monthlyRecurringRevenueInCents",
          "fieldName": "monthlyRecurringRevenueInCents",
          "isDateType": false,
          "isRequired": true,
          "isScalarType": true,
          "typeName": "Int",
        },
        {
          "columnName": "on_free_trial",
          "columnNamesForRead": [
            "on_free_trial",
            "onFreeTrial",
          ],
          "computeFunction": undefined,
          "ean": ":onFreeTrial",
          "eav": "#onFreeTrial",
          "fieldName": "onFreeTrial",
          "isDateType": false,
          "isRequired": true,
          "isScalarType": true,
          "typeName": "Boolean",
        },
        {
          "columnName": "plan_name",
          "columnNamesForRead": [
            "plan_name",
            "planName",
          ],
          "computeFunction": undefined,
          "ean": ":planName",
          "eav": "#planName",
          "fieldName": "planName",
          "isDateType": false,
          "isRequired": true,
          "isScalarType": true,
          "typeName": "String",
        },
      ],
      "isLedger": false,
      "isPublic": false,
      "primaryKey": {
        "isComposite": true,
        "partitionKeyFields": [],
        "partitionKeyIsSingleField": false,
        "partitionKeyName": "pk",
        "partitionKeyPrefix": "BUSINESS_METRIC",
        "sortKeyFields": [
          {
            "columnName": "on_free_trial",
            "columnNamesForRead": [
              "on_free_trial",
              "onFreeTrial",
            ],
            "computeFunction": undefined,
            "ean": ":onFreeTrial",
            "eav": "#onFreeTrial",
            "fieldName": "onFreeTrial",
            "isDateType": false,
            "isRequired": true,
            "isScalarType": true,
            "typeName": "Boolean",
          },
          {
            "columnName": "plan_name",
            "columnNamesForRead": [
              "plan_name",
              "planName",
            ],
            "computeFunction": undefined,
            "ean": ":planName",
            "eav": "#planName",
            "fieldName": "planName",
            "isDateType": false,
            "isRequired": true,
            "isScalarType": true,
            "typeName": "String",
          },
        ],
        "sortKeyIsSingleField": false,
        "sortKeyName": "sk",
        "sortKeyPrefix": "PLAN",
        "type": "primary",
      },
      "secondaryIndexes": [],
      "table": {
        "dependenciesModuleId": "../dependencies.ts",
        "dispatcherConfig": {
          "batchSize": 10,
          "dependenciesModuleId": "../dependencies.ts",
          "directory": "placeholder/dispatcher-table-plan-metric",
          "filename": "dispatcher-table-plan-metric",
          "functionName": "TablePlanMetricCDCDispatcher",
          "maximumRetryAttempts": 3,
          "memorySize": 256,
          "nestedStackLocation": "./dispatcher.yml",
          "runtimeModuleId": "@code-like-a-carpenter/foundation-runtime",
          "timeout": 30,
        },
        "enablePointInTimeRecovery": true,
        "enableStreaming": true,
        "hasCdc": true,
        "hasPublicModels": false,
        "hasTtl": false,
        "primaryKey": {
          "isComposite": true,
          "partitionKeyFields": [],
          "partitionKeyIsSingleField": false,
          "partitionKeyName": "pk",
          "partitionKeyPrefix": "BUSINESS_METRIC",
          "sortKeyFields": [
            {
              "columnName": "on_free_trial",
              "columnNamesForRead": [
                "on_free_trial",
                "onFreeTrial",
              ],
              "computeFunction": undefined,
              "ean": ":onFreeTrial",
              "eav": "#onFreeTrial",
              "fieldName": "onFreeTrial",
              "isDateType": false,
              "isRequired": true,
              "isScalarType": true,
              "typeName": "Boolean",
            },
            {
              "columnName": "plan_name",
              "columnNamesForRead": [
                "plan_name",
                "planName",
              ],
              "computeFunction": undefined,
              "ean": ":planName",
              "eav": "#planName",
              "fieldName": "planName",
              "isDateType": false,
              "isRequired": true,
              "isScalarType": true,
              "typeName": "String",
            },
          ],
          "sortKeyIsSingleField": false,
          "sortKeyName": "sk",
          "sortKeyPrefix": "PLAN",
          "type": "primary",
        },
        "secondaryIndexes": [],
        "tableName": "TablePlanMetric",
      },
      "ttlConfig": undefined,
      "typeName": "PlanMetric",
    },
  ],
  "tables": [
    {
      "dependenciesModuleId": "../dependencies.ts",
      "dispatcherConfig": {
        "batchSize": 10,
        "dependenciesModuleId": "../dependencies.ts",
        "directory": "placeholder/dispatcher-table-plan-metric",
        "filename": "dispatcher-table-plan-metric",
        "functionName": "TablePlanMetricCDCDispatcher",
        "maximumRetryAttempts": 3,
        "memorySize": 256,
        "nestedStackLocation": "./dispatcher.yml",
        "runtimeModuleId": "@code-like-a-carpenter/foundation-runtime",
        "timeout": 30,
      },
      "enablePointInTimeRecovery": true,
      "enableStreaming": true,
      "hasCdc": true,
      "hasPublicModels": false,
      "hasTtl": false,
      "primaryKey": {
        "isComposite": true,
        "partitionKeyFields": [],
        "partitionKeyIsSingleField": false,
        "partitionKeyName": "pk",
        "partitionKeyPrefix": "BUSINESS_METRIC",
        "sortKeyFields": [
          {
            "columnName": "on_free_trial",
            "columnNamesForRead": [
              "on_free_trial",
              "onFreeTrial",
            ],
            "computeFunction": undefined,
            "ean": ":onFreeTrial",
            "eav": "#onFreeTrial",
            "fieldName": "onFreeTrial",
            "isDateType": false,
            "isRequired": true,
            "isScalarType": true,
            "typeName": "Boolean",
          },
          {
            "columnName": "plan_name",
            "columnNamesForRead": [
              "plan_name",
              "planName",
            ],
            "computeFunction": undefined,
            "ean": ":planName",
            "eav": "#planName",
            "fieldName": "planName",
            "isDateType": false,
            "isRequired": true,
            "isScalarType": true,
            "typeName": "String",
          },
        ],
        "sortKeyIsSingleField": false,
        "sortKeyName": "sk",
        "sortKeyPrefix": "PLAN",
        "type": "primary",
      },
      "secondaryIndexes": [],
      "tableName": "TablePlanMetric",
    },
  ],
}
`;
