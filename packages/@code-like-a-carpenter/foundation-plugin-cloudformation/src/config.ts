import type {DumpOptions} from 'js-yaml';

import type {
  DispatcherConfig,
  HandlerConfig,
} from '@code-like-a-carpenter/foundation-intermediate-representation';

export interface CloudformationPluginConfig {
  /**
   * BuildProperties to be used with ESBuild Metadata for each generated
   * function
   * @see https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-using-build-typescript.html
   */
  buildProperties?: {
    /** @default ['@aws-sdk/*'] */
    external?: readonly string[];
    /** @default false */
    minify?: boolean;
    /** @default true */
    sourcemap?: boolean;
    /** @default es2020 */
    target?: string;
  };

  /**
   * Path to the actions generated by the ActionPlugin. Relative to the codegen
   * config file.
   */
  actionsModuleId: string;
  /**
   * Path to the dependencies file to be injected at runtime. Relative to the
   * codegen config file
   */
  dependenciesModuleId: string;

  /**
   * Path to an existing CloudFormation template to merge with the generated
   * template.
   */
  sourceTemplate?: string;
  outputConfig?: {
    format?: 'json' | 'yaml';
    yamlConfig?: Partial<DumpOptions>;
  };

  readonly defaultDispatcherConfig?: HandlerConfig;
  readonly defaultHandlerConfig?: HandlerConfig;
}

export const defaultDispatcherConfig: DispatcherConfig = {
  memorySize: 384,
  timeout: 60,
};

export const defaultHandlerConfig: HandlerConfig = {
  memorySize: 256,
  /**
   * Needs to be large to 1. account for retries with exponential backoff and
   * 2. to because a single lambda invocation will handle multiple updates.
   */
  timeout: 90,
};
