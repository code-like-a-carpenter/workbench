on: push
name: Push

env:
  NX_BRANCH: ${{ github.ref_name }}
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  NX_RUN_GROUP: ${{ github.run_id }}-${{ github.run_attempt }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - uses: nrwl/nx-set-shas@v3
      - run: npm ci
      - run: npx nx run-many --target=build --parallel=4

  diff:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - uses: nrwl/nx-set-shas@v3
      - run: npm ci
      # by making this job depend on the build job, the following line should be
      # 100% cache hits; The nx cache seems to be much easier to use than the
      # GitHub artifact action.
      - run: npx nx run-many --target=build --parallel=4
      - run: ./scripts/diff-lint

  lint:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - uses: nrwl/nx-set-shas@v3
      - run: npm ci
      # by making this job depend on the build job, the following line should be
      # 100% cache hits; The nx cache seems to be much easier to use than the
      # GitHub artifact action.
      - run: npx nx run-many --target=build --parallel=4
      - run: npx nx workspace-lint
      - run: npx nx format:check
      - run: npm run lint
        env:
          ESLINT_FORMAT_OPTIONS: |
            --format json-with-metadata --output-file reports/style/eslint.json
          TSC_OPTIONS: '| tee reports/style/tsc.log'
      - uses: check-run-reporter/action@v2.11.1
        if: ${{ always() }}
        with:
          token: ${{ secrets.CHECK_RUN_REPORTER_TOKEN }}
          label: ESLint
          report: 'reports/style/eslint.json'
      - uses: check-run-reporter/action@v2.11.1
        if: ${{ always() }}
        with:
          token: ${{ secrets.CHECK_RUN_REPORTER_TOKEN }}
          label: TSC
          report: 'reports/style/tsc.log'

  release:
    needs:
      - build
      - diff
      - lint
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - uses: nrwl/nx-set-shas@v3
      - run: npm ci
      # by making this job depend on the build job, the following line should be
      # 100% cache hits; The nx cache seems to be much easier to use than the
      # GitHub artifact action.
      - run: npx nx run-many --target=build --parallel=4
      - run: |
          npm config set workspaces-update false
          npx multi-semantic-release \
            --deps.release=inherit \
            --ignore-private-packages
        env:
          GIT_AUTHOR_EMAIL:
            ${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com
          GIT_COMMITTER_EMAIL:
            ${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com
          GIT_AUTHOR_NAME: ${{ github.actor }}
          GIT_COMMITTER_NAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - uses: nrwl/nx-set-shas@v3
      - run: npm ci
      # by making this job depend on the build job, the following line should be
      # 100% cache hits; The nx cache seems to be much easier to use than the
      # GitHub artifact action.
      - run: npx nx run-many --target=build --parallel=4
      - run: npm test
      - uses: check-run-reporter/action@v2.11.1
        if: ${{ always() }}
        with:
          token: ${{ secrets.CHECK_RUN_REPORTER_TOKEN }}
          label: Unit Tests
          report: 'reports/junit/**/*.xml'
